
Задание 1¶
Задание:

Создать проект со следующей структурой:

myproject/
├── about
│   └── aboutme.html
└── index.html
В файле index.html написать 2 ссылки с прямым и абсолютным обращением к aboutme.html. В файле aboutme.html создать такие же ссылки на файл index.html.

Выолненный html-код:

1) Файл index.html

<!DOCTYPE html>
<html>
<head>
    <title>
        Index
    </title>
</head>
<body>

<a href="C:/Users/User/Desktop/Веб/myproject/about/aboutme.html">
    <H1>
        Абсолютная ссылка на файл aboutme.html
    </H1>
</a>

<a href="./about/aboutme.html">
    <H1>
        Относительная ссылка на файл aboutme.html
    </H1>
</a>

</body>
</html>
2) Файл aboutme.html

<!DOCTYPE html>
<html>
<head>
    <title>
        Aboutme
    </title>
</head>
<body>

<a href="C:/Users/User/Desktop/Веб/myproject/index.html">
    <H1>
        Абсолютная ссылка на файл Index.html
    </H1>
</a>

<a href="../index.html">
    <H1>
        Относительная ссылка на файл Index.html 
    </H1>
</a>

</body>
</html>
Задание 2
Задание: Подключиться по telnet к http://wikipedia.org и отправить запрос:

Подключение к сайту:

open ru.wikipedia.org 80
Запрос:

GET /wiki/страница HTTP/1.1
Host: ru.wikipedia.org
User-Agent: Mozilla/5.0 (X11; U; Linux i686; ru; rv:1.9b5) Gecko/2008050509 Firefox/3.0b5
Accept: text/html
Connection: close

(Метод запроса GET предназначен для получения ответа от сервера. Отправляем запрос на получение содержимого с данной страницы /wiki/страница расположенной на хосте ru.wikipedia.org)
Ответ сайта:

HTTP/1.1 301 TLS Redirect
Date: Fri, 28 Sep 2018 16:22:01 GMT
Server: Varnish
X-Varnish: 909906235
X-Cache: cp3041 int
X-Cache-Status: int-front
Set-Cookie: WMF-Last-Access=28-Sep-2018;Path=/;HttpOnly;secure;Expires=Tue, 30 Oct 2018 12:00:00 GMT
Set-Cookie: WMF-Last-Access-Global=28-Sep-2018;Path=/;Domain=.wikipedia.org;HttpOnly;secure;Expires=Tue, 30 Oct 2018 12:00:00 GMT
X-Client-IP: 5.189.106.47
Location: https://ru.wikipedia.org/wiki/страница
Content-Length: 0
Connection: close

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 301 редирект обозначает перенаправление, ресурс теперь можно найти по другому URL адресу.
 Указывает дату генерации отклика
 Название сервера
 Далее указываются дополнительные заголовки со своей информацией
 Куки
 ip клиента
 Полный адрес местанахождения страницы
 Длина контента
 В последней строке указывается, что соединение с сервером прервано)
Задание 3
Задание:

Отправить запросы на http://httpbin.org, проанализировать ответ и код состояния. Описать работу HTTP протокола в каждом запросе.

1) /ip

Подключение к сайту:

open httpbin.org 80
Запрос:

GET /ip HTTP/1.1
Host: httpbin.org
Accept: */*
(запрос ip-адрес клиента)
Ответ:

HTTP/1.1 200 OK
Connection: keep-alive
Server: gunicorn/19.9.0
Date: Fri, 28 Sep 2018 16:32:08 GMT
Content-Type: application/json
Content-Length: 31
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
Via: 1.1 vegur

{
   "origin": "5.189.106.47"
                           }

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 200 ok - успешный запрос, сервер отправляет ответ в теле сообщения.
 Поддерживается постоянное соединение (keep-alive)
 Название сервера и его версия (Server: gunicorn/19.9.0)
 Указывает дату генерации отклика (Date: Fri, 28 Sep 2018 16:32:08 GMT)
 Формат ответа-JSON (пара:ключ-origin и значение-ip-адрес клиента)
2) /get

Подключение к сайту:

open httpbin.org 80
Запрос:

GET /get?foo=bar&1=2&2/0&error=True HTTP/1.1
Host: httpbin.org
Accept: */*

(Указываем,что можем читать любые документы.)
Ответ:

HTTP/1.1 200 OK
Connection: keep-alive
Server: gunicorn/19.9.0
Date: Fri, 28 Sep 2018 16:37:59 GMT
Content-Type: application/json
Content-Length: 281
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
Via: 1.1 vegur

{
   "args": {
             "1": "2",
             "2/0": "",
             "error": "True",
             "foo": "bar"
            },
   "headers": {
              "Accept": "*/*",
              "Connection": "close",
              "Host": "httpbin.org"
            },
   "origin": "5.189.106.47",
   "url": "http://httpbin.org/get?foo=bar&1=2&2%2F0&error=True"
}

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 200 ok - успешный запрос, сервер отправляет ответ в теле сообщения.
 Поддерживается постоянное соединение (keep-alive)
 Название сервера и его версия (Server: gunicorn/19.9.0)
 Указывает дату генерации отклика (Date: Fri, 28 Sep 2018 16:37:59 GMT)
 Формат JSON(в ответе передались переприсвоенные значения аргументов,заголовки,ip-клиента и адрес страницы)
3)/post

Подключение к сайту:

open httpbin.org 80
Запрос:

POST /post HTTP/1.1
Host: httpbin.org
Accept: */*
Content-Length: 35
Content-Type: application/x-www-form-urlencoded

foo=bar&1=2&2%2F0=&error=True

(Метод POST предназначен для запроса, при котором веб-сервер принимает данные, заключённые в тело сообщения, для хранения.
 В рамках POST запроса произвольное количество данных любого типа может быть отправлено на сервер в теле сообщения запроса.
 Указываем,что можем читать любые документы.)
Ответ:

HTTP/1.1 200 OK
Connection: keep-alive
Server: gunicorn/19.9.0
Date: Fri, 28 Sep 2018 18:44:41 GMT
Content-Type: application/json
Content-Length: 415
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
Via: 1.1 vegur

{
   "args": {},
   "data": "",
   "files": {},
   "form": {
   "1": "2",
   "2/0": "",
   "error": "True\r\n\r\n\r\n",
   "foo": "bar"
   },
   "headers": {
   "Accept": "*/*",
   "Connection": "close",
   "Content-Length": "35",
   "Content-Type": "application/x-www-form-urlencoded",
   "Host": "httpbin.org"
   },
   "json": null,
   "origin": "5.189.106.47",
   "url": "http://httpbin.org/post"
 }

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 200 ok - успешный запрос, сервер отправляет ответ в теле сообщения.
 Поддерживается постоянное соединение (keep-alive)
 Название сервера и его версия (Server: gunicorn/19.9.0)
 Указывает дату генерации отклика (Date: Fri, 28 Sep 2018 18:44:41 GMT)
 Формат ответа-JSON(пары:ключ-значение)
4) /cookies/set

Подключение к сайту:

open httpbin.org 80
Запрос:

GET /cookies/set?country=Ru HTTP/1.1
Host: httpbin.org
Accept: */*
Ответ:

HTTP/1.1 302 FOUND
Connection: keep-alive
Server: gunicorn/19.9.0
Date: Fri, 28 Sep 2018 17:15:35 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 223
Location: /cookies
Set-Cookie: country=Ru; Path=/
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
Via: 1.1 vegur

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>Redirecting...</title>
<p>You should be redirected automatically to target URL: <a href="/cookies">/cookies</a>.  If not click the link.

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 302 FOUND - запрошенный документ временно доступен по другому URI, указанному в заголовке в поле Location 
                                                                                     (Location: /cookies)
 Поддерживается постоянное соединение (keep-alive)
 Название сервера и его версия (Server: gunicorn/19.9.0)
 Указывает дату генерации отклика (Date: Fri, 28 Sep 2018 17:15:35 GMT)
 Задает cookie, которое будет передано клиенту вместе с другими HTTP заголовками (Set-Cookie: country=Ru; Path=/)
 Сервер разрешает кросс-доменный запрос с этого домена (Access-Control-Allow-Origin: *)
5) /cookies

Подключение к сайту:

open httpbin.org 80
Запрос:

GET /cookies HTTP/1.1
Host: httpbin.org
Accept: */*
Ответ:

HTTP/1.1 200 OK
Connection: keep-alive
Server: gunicorn/19.9.0
Date: Fri, 28 Sep 2018 17:20:23 GMT
Content-Type: application/json
Content-Length: 20
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
Via: 1.1 vegur

{
   "cookies": {}
                }

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 200 ok - успешный запрос, сервер отправляет ответ в теле сообщения.
 Поддерживается постоянное соединение (keep-alive)
 Название сервера и его версия (Server: gunicorn/19.9.0)
 Указывает дату генерации отклика (Date: Fri, 28 Sep 2018 17:20:23 GMT)
 Записей в cookies нет
6) /redirect

Подключение к сайту:

open httpbin.org 80
Запрос:

GET /redirect/4 HTTP/1.1
Host: httpbin.org
Accept: */*
(запрос на проверку перенаправления)

Ответ:

HTTP/1.1 302 FOUND
Connection: keep-alive
Server: gunicorn/19.9.0
Date: Fri, 28 Sep 2018 17:22:18 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 247
Location: /relative-redirect/3
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
Via: 1.1 vegur

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>Redirecting...</title>
<h1>Redirecting...</h1>
<p>You should be redirected automatically to target URL: <a href="/relative-redirect/3">/relative-redirect/3</a>.  If not click the link.

(Сервер получил текст запроса, обрабатал его, сформировал текст ответа и отправил его обратно.
 302 FOUND - запрошенный документ временно доступен по другому URI, указанному в заголовке в поле Location
                                                                                     (Location: /relative-redirect/3)
 Поддерживается постоянное соединение (keep-alive)
 Название сервера и его версия (Server: gunicorn/19.9.0)
 Указывает дату генерации отклика (Date: Fri, 28 Sep 2018 17:22:18 GMT)
Задание 4
Задание:

1) Создать HTML форму c action="http://httpbin.org/post" method="POST" и enctype="multipart/form-data"
2) Добавить в форму поля firstname, lastname, group, message (textarea), myimg (file).
3) Проверить результат отправки данных формы.
4) Проанализировать ответ. Описать работу HTTP протокола в данном случае.

HTML-код формы для заполнения:

 <!DOCTYPE html>
 <html>
    <head>
        <meta charset="utf-8">
        <title>
            Форма для заполнения
        </title>
    </head>
    <body>
        <form action="http://httpbin.org/post" method="POST" enctype="multipart/form-data"> 
            <p>
            First name:
            <input type="text" name="first name" size="20" maxlength="50">
            </p>
            <p>
            Last name:
            <input type="text" name="lastname" size="20" maxlength="50">
            </p>
            <p>
            Group:
            <input type="text" name="group" size="20" maxlength="50">
            </p>
            <p>
            Message:
            <input type="textarea" name="message" size="20" maxlength="50">
            </p>
            <p>
            Myimg:
            <input type="file" value="myimg" name="myimg" size="20" maxlength="150">
            </p>
            <input type="submit" value="submit">
        </form>
    </body>
</html>
Введенные данные:

Screenshot_1.jpg

Полученный ответ:

{
  "args": {}, 
  "data": "", 
  "files": {}, 
  "form": {
    "first name": "Arkadiy", 
    "group": "NMT-362701", 
    "lastname": "Tretiakov", 
    "message": "Test message", 
    "myimg": ""
  }, 
  "headers": {
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8", 
    "Accept-Encoding": "gzip, deflate", 
    "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7", 
    "Cache-Control": "max-age=0", 
    "Connection": "close", 
    "Content-Length": "605", 
    "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryA4JWK7PtkQWGrkxO", 
    "Host": "httpbin.org", 
    "Origin": "null", 
    "Upgrade-Insecure-Requests": "1", 
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36", 
    "X-Compress": "null"
  }, 
  "json": null, 
  "origin": "5.189.106.47", 
  "url": "http://httpbin.org/post"
}
Пояснения:

Тег <form> устанавливает форму на веб-странице. 
Форма предназначена для обмена данными между пользователем и сервером. 
Документ может содержать любое количество форм, но одновременно на сервер может быть отправлена только одна форма.
По этой причине данные форм должны быть независимы друг от друга.
Для отправки формы на сервер используется кнопка Submit. Если кнопка Submit отсутствует в форме, 
клавиша Enter имитирует ее использование.
Когда форма отправляется на сервер, управление данными передается программе, 
заданной атрибутом action тега <form>. Предварительно браузер подготавливает 
информацию в виде пары «имя=значение», где имя определяется атрибутом name тега <input>
а значение введено пользователем или установлено в поле формы по умолчанию.
